{
  "timestamp": "2025-08-20T12:03:34.420653",
  "summary": {
    "total_tests": 14,
    "passed_tests": 13,
    "success_rate": 92.85714285714286,
    "graceful_failures": 14,
    "crashes": 0,
    "robustness_score": 100.0
  },
  "tests": [
    {
      "name": "Prompt Très Long",
      "prompt": "API très complexe pour système de gestion d'entreprise avec utilisateurs ayant des rôles multiples, des produits avec variantes et options, des commandes avec états complexes, des paiements avec multiples méthodes, des livraisons avec tracking, des retours et remboursements, des avis clients avec modération, des promotions et codes de réduction, des statistiques et rapports avancés, intégration avec systèmes externes, notifications temps réel, cache distribué, recherche elasticsearch",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:33.942083",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 1,
        "eval_score": 1.0,
        "logs_count": 9,
        "project_created": true
      }
    },
    {
      "name": "Entités Multiples",
      "prompt": "API avec users(email unique, password_hash, role, created_at datetime), products(name, description, price float, stock int, category_id int, active bool), categories(name unique, description), orders(user_id int, total float, status, created_at datetime), order_items(order_id int, product_id int, quantity int, price float), reviews(user_id int, product_id int, rating int, comment, created_at datetime)",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:33.976805",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 6,
        "eval_score": 1.0,
        "logs_count": 9,
        "project_created": true
      }
    },
    {
      "name": "Types Complexes",
      "prompt": "API avec events(name, start_datetime datetime, end_datetime datetime, price float, capacity int, available bool) et bookings(event_id int, user_email, quantity int, total_price float, booking_date datetime, status)",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:34.017075",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 3,
        "eval_score": 1.0,
        "logs_count": 9,
        "project_created": true
      }
    },
    {
      "name": "Prompt Vide",
      "prompt": "",
      "should_succeed": false,
      "timestamp": "2025-08-20T12:03:34.051372",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 0,
        "eval_score": 0.6,
        "logs_count": 6,
        "project_created": true
      }
    },
    {
      "name": "Prompt Très Court",
      "prompt": "API",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:34.078307",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 0,
        "eval_score": 0.6,
        "logs_count": 6,
        "project_created": true
      }
    },
    {
      "name": "Syntaxe Incorrecte",
      "prompt": "API avec users(email unique password_hash et products name, price",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:34.105247",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 1,
        "eval_score": 1.0,
        "logs_count": 9,
        "project_created": true
      }
    },
    {
      "name": "Caractères Spéciaux",
      "prompt": "API avec entités spéciales: users(email@domain.com, password#hash) et products(name with spaces, price$)",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:34.137647",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 2,
        "eval_score": 1.0,
        "logs_count": 9,
        "project_created": true
      }
    },
    {
      "name": "Mélange Langues",
      "prompt": "API pour gestion utilisateurs avec users(email unique, mot_de_passe) and products(nom, prix float)",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:34.170716",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 2,
        "eval_score": 1.0,
        "logs_count": 9,
        "project_created": true
      }
    },
    {
      "name": "Répétitions",
      "prompt": "API API API avec users users users(email email, password password) et products products(name name, price price)",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:34.203110",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 2,
        "eval_score": 1.0,
        "logs_count": 9,
        "project_created": true
      }
    },
    {
      "name": "Entités Nombreuses",
      "prompt": "API avec entity0(field1, field2, field3 int), entity1(field1, field2, field3 int), entity2(field1, field2, field3 int), entity3(field1, field2, field3 int), entity4(field1, field2, field3 int), entity5(field1, field2, field3 int), entity6(field1, field2, field3 int), entity7(field1, field2, field3 int), entity8(field1, field2, field3 int), entity9(field1, field2, field3 int), entity10(field1, field2, field3 int), entity11(field1, field2, field3 int), entity12(field1, field2, field3 int), entity13(field1, field2, field3 int), entity14(field1, field2, field3 int), entity15(field1, field2, field3 int), entity16(field1, field2, field3 int), entity17(field1, field2, field3 int), entity18(field1, field2, field3 int), entity19(field1, field2, field3 int)",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:34.234539",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 20,
        "eval_score": 1.0,
        "logs_count": 9,
        "project_created": true
      }
    },
    {
      "name": "Champs Nombreux",
      "prompt": "API avec bigentity(field0, field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13, field14, field15, field16, field17, field18, field19, field20, field21, field22, field23, field24, field25, field26, field27, field28, field29, field30, field31, field32, field33, field34, field35, field36, field37, field38, field39, field40, field41, field42, field43, field44, field45, field46, field47, field48, field49)",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:34.289165",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 1,
        "eval_score": 1.0,
        "logs_count": 9,
        "project_created": true
      }
    },
    {
      "name": "Domaine Médical",
      "prompt": "API pour dossiers médicaux avec patients(nom, date_naissance datetime, sécurité_sociale unique) et consultations(patient_id int, médecin, diagnostic, prescription)",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:34.321350",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 2,
        "eval_score": 1.0,
        "logs_count": 9,
        "project_created": true
      }
    },
    {
      "name": "Système Bancaire",
      "prompt": "API bancaire avec comptes(numero unique, solde float, type) et transactions(compte_source int, compte_dest int, montant float, date_transaction datetime)",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:34.355021",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 2,
        "eval_score": 1.0,
        "logs_count": 9,
        "project_created": true
      }
    },
    {
      "name": "IoT Sensors",
      "prompt": "API IoT avec sensors(device_id unique, location, type) et measurements(sensor_id int, value float, timestamp datetime, unit)",
      "should_succeed": true,
      "timestamp": "2025-08-20T12:03:34.388247",
      "actual_success": true,
      "graceful_failure": true,
      "details": {
        "entities_parsed": 2,
        "eval_score": 1.0,
        "logs_count": 9,
        "project_created": true
      }
    }
  ]
}
import os
from datetime import datetime, timedelta
from typing import Optional
from fastapi import Depends, HTTPException, status
from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials
import jwt

JWT_SECRET = os.getenv("JWT_SECRET", "devsecret")
ALGO = "HS256"
auth_scheme = HTTPBearer(auto_error=False)

def get_current_user(token: Optional[HTTPAuthorizationCredentials] = Depends(auth_scheme)):
    # MVP: n'impose pas l'auth, retourne None si pas de token
    if token is None:
        return None
    try:
        payload = jwt.decode(token.credentials, JWT_SECRET, algorithms=[ALGO])
        return payload.get("sub")
    except Exception:
        raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED, detail="Invalid token")